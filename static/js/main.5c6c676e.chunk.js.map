{"version":3,"sources":["_context/chartsContext.js","_reducers/charts.js","components/charts/bar-chart/Axis.js","components/charts/bar-chart/Axes.js","components/charts/gradients.js","utils/isRequired.js","components/Tooltip.js","components/charts/bar-chart/Bars.js","components/ResponsiveWrapper.js","utils/getDataForChart.js","components/charts/bar-chart/Chart.js","utils/alphabet.js","utils/countLetterOcurences.js","components/DemoBarChart.js","components/charts/pie-chart/PieBody.js","components/charts/pie-chart/Chart.js","components/DemoPieChart.js","components/charts/bubble-chart/BubbleBody.js","components/charts/bubble-chart/simulation.js","components/charts/bubble-chart/Chart.js","components/DemoBubbleChart.js","components/TextArea.js","components/Dashboard.js","containers/App.js","serviceWorker.js","index.js"],"names":["chartsContext","React","createContext","ChartsProvider","Provider","Consumer","initialChartsState","text","user1","user2","color","chartsReducer","state","type","Axis","orient","label","tickSize","scale","translate","axisElement","useEffect","renderAxis","addLabels","mounted","useRef","current","axisType","axis","d3Axis","tickPadding","axisBottom","select","selectAll","attr","call","style","Xposition","Yposition","transform","append","className","ref","el","scales","margins","svgDimensions","height","width","xProps","xScale","bottom","right","yProps","yScale","left","top","SvgLinearGradient","user","useContext","gradientId","id","x1","y1","x2","y2","stopOpacity","stopColor","offset","isRequired","param","Error","addTooltip","hook","d3","tooltip","mouseover","d","count","this","parentNode","mousemove","title","data","key","letter","additionalText","html","value","offsetY","offsetX","mouseleave","Bars","on","renderBars","updateBars","divide","length","enter","indexOf","bandwidth","remove","map","item","renderGradients","Wrapper","styled","div","ChartComponent","props","containerWidth","fitParentContainer","bind","window","addEventListener","removeEventListener","currentContainerWidth","chartContainer","getBoundingClientRect","setState","parentWidth","shouldRenderChart","renderChart","Component","getDataForChart","letters","preparedData","push","getMergedData","concat","apply","ResponsiveWrapper","Math","max","mergedData","scaleBand","padding","domain","range","scaleLinear","Axes","ALPHABET","split","countLetterOcurences","string","character","char","charReg","RegExp","match","DemoBarChart","PieBody","margin","renderPieChart","radius","min","updatePieChart","data_ready","pie","innerRadius","outerRadius","ChartWrapper","formatUserData","userData","reduce","obj","Object","assign","sumObjectValues","values","a","b","dataUser1","dataUser2","renderBubble","dataCompressed","radiusScale","node","filter","force","x","y","strength","createSimulation","nodes","CenteredWrapper","Array","from","m","set","get","Map","getMergedDataCompressed","DemoBubbleChart","TextAreaWrapper","p","usercolor","UserName","textColor","TextArea","dispatch","setType","userColors","onChange","e","target","placeholder","spellCheck","DashboardWrapper","Section","ItemWrapper","Dashboard","DemoPieChart","AppWrapper","App","useChartsState","useReducer","theme","defaultTheme","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c6c676e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst chartsContext = React.createContext({});\n\nexport const ChartsProvider = chartsContext.Provider;\nexport const ChartsConsumer = chartsContext.Consumer;\n\nexport default chartsContext;\n","export const initialChartsState = {\n  text: {\n    user1:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eleifend interdum dignissimzzz.\",\n    user2: \"Danuta Ludwikowska\"\n  },\n  color: {\n    user1: [\"rgba(252,207,49,1)\", \"rgba(245,85,85,0.8)\"],\n    user2: [\"rgb(50, 210, 184)\", \"rgb(154, 14, 250)\"]\n  }\n};\n\n// todo\nexport const chartsReducer = (state, { type, text }) => {\n  switch (type) {\n    case \"SET_USER1_TEXT\":\n      return {\n        ...state,\n        text: {\n          ...state.text,\n          user1: text\n        }\n      };\n    case \"SET_USER2_TEXT\":\n      return {\n        ...state,\n        text: {\n          ...state.text,\n          user2: text\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3Axis from \"d3-axis\";\nimport { select, selectAll } from \"d3-selection\";\n\nconst SMOKE_COLOR = \"rgba(54, 61, 81, 0.7)\";\n\nconst Axis = ({ orient, label, tickSize, scale, translate }) => {\n  let axisElement = null;\n\n  useEffect(() => {\n    renderAxis();\n    addLabels();\n  }, []); // will run only once\n\n  // old componentDidUpdate\n  const mounted = useRef();\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n    } else {\n      renderAxis();\n    }\n  });\n\n  const renderAxis = () => {\n    const axisType = `axis${orient}`;\n    const axis = d3Axis[axisType]()\n      .scale(scale)\n      .tickSize(-tickSize)\n      .tickPadding([12]);\n\n    const axisBottom = select(\".Axis-Bottom\");\n\n    const tick = selectAll(\".tick\");\n    tick.selectAll(\"text\").attr(\"y\", \"0\");\n\n    axisBottom\n      .selectAll(\".tick\")\n      .selectAll(\"text\")\n      .attr(\"y\", \"15\");\n\n    select(axisElement)\n      .call(axis)\n      .style(\"text-anchor\", \"middle\");\n\n    selectAll(\".domain\").attr(\"stroke\", SMOKE_COLOR);\n    selectAll(\"line\").attr(\"stroke\", SMOKE_COLOR);\n    selectAll(\"text\").attr(\"fill\", \"white\");\n\n    // update labels positions\n    selectAll(`.label-${orient}`)\n      .attr(\"x\", label.Xposition)\n      .attr(\"y\", label.Yposition)\n      .attr(\"transform\", label.transform);\n  };\n\n  const addLabels = () => {\n    selectAll(`.Axis-${orient}`)\n      .append(\"text\")\n      .attr(\"class\", `label-${orient}`)\n      .style(\"text-anchor\", \"end\")\n      .attr(\"fill\", \"white\")\n      .text(label.text)\n      .attr(\"x\", label.Xposition)\n      .attr(\"y\", label.Yposition)\n      .attr(\"transform\", label.transform)\n      .style(\"font-size\", \"12px\");\n  };\n\n  return (\n    <g\n      className={`Axis Axis-${orient}`}\n      ref={el => {\n        axisElement = el;\n      }}\n      transform={translate}\n    />\n  );\n};\n\nexport default Axis;\n","import React from \"react\";\nimport Axis from \"./Axis\";\n\nexport default ({ scales, margins, svgDimensions }) => {\n  const { height, width } = svgDimensions;\n\n  const xProps = {\n    orient: \"Bottom\",\n    scale: scales.xScale,\n    translate: `translate(0, ${height - margins.bottom})`,\n    tickSize: -10,\n    svgDimensions: svgDimensions,\n    label: {\n      transform: \"rotate(0)\",\n      Yposition: \"40\",\n      Xposition: width - margins.right,\n      text: \"Characters\"\n    }\n  };\n\n  const yProps = {\n    orient: \"Left\",\n    scale: scales.yScale,\n    translate: `translate(${margins.left}, 0)`,\n    tickSize: width - margins.left - margins.right,\n    svgDimensions: svgDimensions,\n    label: {\n      transform: \"rotate(-90)\",\n      Yposition: \"-50\",\n      Xposition: -margins.top,\n      text: \"Ocurences\"\n    }\n  };\n\n  return (\n    <g className=\"Axes\">\n      <Axis {...xProps} />\n      <Axis {...yProps} />\n    </g>\n  );\n};\n","import React, { useContext } from \"react\";\nimport chartsContext from \"../../_context/chartsContext\";\n\nexport const SvgLinearGradient = ({ user }) => {\n  const [state, dispatch] = useContext(chartsContext);\n\n  const gradientId = `svgLinearGradient-${user}`;\n  return (\n    <linearGradient id={gradientId} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop stopOpacity=\"1\" stopColor={state.color[user][0]} offset=\"0\"></stop>\n      <stop\n        stopOpacity=\"0.8\"\n        stopColor={state.color[user][1]}\n        offset=\"1\"\n      ></stop>\n    </linearGradient>\n  );\n};\n\nexport const renderGradients = data => {\n  const group = data.map((item, key) => (\n    <SvgLinearGradient key={key} user={`user${key + 1}`} />\n  ));\n  return group;\n};\n","export const isRequired = param => {\n  throw new Error(`param ${param} is required`);\n};\n","import * as d3 from \"d3\";\nimport { isRequired } from \"../utils/isRequired\";\n\nlet TOOLTIP_ID = \"id\";\n\nexport const addTooltip = (\n  hook = isRequired(\"hook\"),\n  id = isRequired(\"id\")\n) => {\n  d3.select(hook)\n    .append(\"div\")\n    .attr(\"id\", id)\n    .style(\"opacity\", 0)\n    .style(\"position\", \"absolute\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"solid\")\n    .style(\"border-width\", \"2px\")\n    .style(\"border-radius\", \"5px\")\n    .style(\"padding\", \"5px\");\n\n  TOOLTIP_ID = `#${id}`;\n};\n\nconst tooltip = hook => d3.select(d3.select(hook).attr(\"tooltipid\"));\n\n// Three function that change the tooltip when user hover / move / leave a cell\nexport const mouseover = function(d) {\n  d.count && d3.selectAll(\".bar\").style(\"opacity\", 1);\n  tooltip(this).style(\"opacity\", 1);\n  d3.select(this)\n    .style(\"stroke\", \"rgba(246, 246, 246, 0.4)\")\n    .style(\"stroke-width\", \"2px\")\n    .style(\"opacity\", 1)\n    .style(\"transition\", \"0.2s\");\n\n  d.count && d3.select(this.parentNode).style(\"opacity\", 0.8);\n};\nexport const mousemove = function(d) {\n  d.count && d3.selectAll(\".bar\").style(\"opacity\", 0.4);\n  d.count && d3.select(this.parentNode).style(\"opacity\", 1);\n\n  let title = d.data ? d.data.key : d.letter;\n  let additionalText = d.data ? \" letters\" : \"\";\n  tooltip(this)\n    // .html(\"The exact value of<br>this cell is: \")\n    .html(title + \": \" + (d.value || d.count) + additionalText)\n    .style(\"top\", d3.event.offsetY - 10 + \"px\")\n    .style(\"left\", d3.event.offsetX + 10 + \"px\")\n    .style(\"opacity\", 1)\n    .style(\"transition\", \"0.2s\");\n};\nexport const mouseleave = function(d) {\n  tooltip(this).style(\"opacity\", 0);\n  d3.select(this)\n    .style(\"stroke\", \"none\")\n    .style(\"opacity\", 0.8)\n    .style(\"transition\", \"0.2s\");\n\n  d.count && d3.selectAll(\".bar\").style(\"opacity\", 0.8);\n};\n\n//\n","import React, { Fragment, useEffect, useRef } from \"react\";\nimport { selectAll } from \"d3-selection\";\nimport { renderGradients } from \"../gradients\";\nimport * as d3 from \"d3\";\nimport { addTooltip, mouseleave, mousemove, mouseover } from \"../../Tooltip\";\n\nconst Bars = ({ scales, margins, data, svgDimensions }) => {\n  const { xScale, yScale } = scales;\n  const { height } = svgDimensions;\n\n  useEffect(() => {\n    addTooltip(\"#bar-chart\", \"my-bartooltip\");\n  }, []); // will run only once\n\n  useEffect(() => {\n    selectAll(\".bar-group\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mousemove\", mousemove)\n      .on(\"mouseleave\", mouseleave);\n\n    renderBars();\n  });\n\n  // old componentDidUpdate\n  const mounted = useRef();\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n    } else {\n      updateBars();\n    }\n  });\n\n  const renderBars = () => {\n    let divide = data.length;\n\n    for (let count in data) {\n      d3.select(\"#Bars\")\n        .append(\"g\")\n        .attr(\"class\", `user-${+count + 1} bar-group`)\n        .selectAll(`.rect${count + 1}`)\n        .data(data[count])\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"bar\")\n        .attr(\"data-id\", d => `${data[count].indexOf(d)}`)\n        .append(\"rect\")\n        .style(\"transition\", \"0.8s\")\n        .style(\"opacity\", \"0.8\")\n        .attr(\n          \"x\",\n          d => xScale(d.letter) + +count * (2 + xScale.bandwidth() / divide)\n        )\n        .attr(\"y\", d => yScale(d.count))\n        .attr(\"width\", xScale.bandwidth() / divide)\n        .attr(\"height\", d => height - margins.bottom - yScale(d.count))\n        .attr(\"fill\", `url(#svgLinearGradient-user${+count + 1}`)\n        .attr(\"class\", \"rectangle\")\n\n        .attr(\"tooltipid\", \"#my-bartooltip\")\n        .on(\"mouseover\", mouseover)\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseleave\", mouseleave);\n    }\n  };\n\n  const updateBars = () => {\n    d3.selectAll(\".bar-group\").remove();\n    renderBars();\n  };\n\n  return (\n    <Fragment>\n      <g id=\"Bars\"></g>\n      {renderGradients(data)}\n    </Fragment>\n  );\n};\n\nexport default Bars;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  .Responsive-chart-wrapper {\n    width: 100%;\n    position: relative;\n    svg {\n      overflow: visible;\n    }\n  }\n`;\n\nexport default ChartComponent =>\n  class ResponsiveChart extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        containerWidth: null\n      };\n\n      this.fitParentContainer = this.fitParentContainer.bind(this);\n    }\n\n    componentDidMount() {\n      this.fitParentContainer();\n      window.addEventListener(\"resize\", this.fitParentContainer);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.fitParentContainer);\n    }\n\n    fitParentContainer() {\n      const { containerWidth } = this.state;\n\n      const currentContainerWidth = this.chartContainer.getBoundingClientRect()\n        .width;\n\n      const shouldResize = containerWidth !== currentContainerWidth;\n\n      if (shouldResize) {\n        this.setState({\n          containerWidth: currentContainerWidth\n        });\n      }\n    }\n\n    renderChart() {\n      const parentWidth = this.state.containerWidth;\n\n      return <ChartComponent {...this.props} parentWidth={parentWidth} />;\n    }\n\n    render() {\n      const { containerWidth } = this.state;\n      const shouldRenderChart = containerWidth !== null;\n\n      return (\n        <Wrapper>\n          <div\n            ref={el => {\n              this.chartContainer = el;\n            }}\n            className=\"Responsive-chart-wrapper\"\n          >\n            {shouldRenderChart && this.renderChart()}\n          </div>\n        </Wrapper>\n      );\n    }\n  };\n","const getDataForChart = letters => {\n  const preparedData = [];\n\n  for (let el in letters) {\n    preparedData.push({\n      letter: el,\n      count: letters[el]\n    });\n  }\n  return preparedData;\n};\n\nexport default getDataForChart;\n\nexport const getMergedData = data => {\n  return [].concat.apply([], data);\n};\n\nexport const getMergedDataCompressed = data => {\n  return Array.from(\n    data.reduce(\n      (m, { letter, count }) => m.set(letter, (m.get(letter) || 0) + count),\n      new Map()\n    ),\n    ([letter, count]) => ({ letter, count })\n  );\n};\n","import React from \"react\";\nimport { scaleBand, scaleLinear } from \"d3-scale\";\nimport Axes from \"./Axes\";\nimport Bars from \"./Bars\";\nimport * as d3 from \"d3\";\nimport ResponsiveWrapper from \"../../ResponsiveWrapper\";\nimport { getMergedData } from \"../../../utils/getDataForChart\";\n\nconst Chart = ({ parentWidth, data }) => {\n  const margins = { top: 30, right: 50, bottom: 50, left: 70 };\n  const width = 600 - margins.left - margins.right;\n  const height = 500 - margins.top - margins.bottom;\n\n  const svgDimensions = {\n    width: Math.max(parentWidth, 600),\n    height: height\n  };\n\n  const mergedData = getMergedData(data);\n\n  // scaleBand type\n  const xScale = scaleBand()\n    .padding(0.5)\n    .domain(mergedData.map(d => d.letter))\n    .range([margins.left, svgDimensions.width - margins.right]);\n\n  // scaleLinear type\n  const yScale = scaleLinear()\n    .domain([0, d3.max(mergedData, d => d.count)])\n    .range([svgDimensions.height - margins.bottom, margins.top]);\n\n  return (\n    <div id=\"bar-chart\">\n      <svg width={svgDimensions.width} height={svgDimensions.height}>\n        <Axes\n          className=\"Axes\"\n          scales={{ xScale, yScale }}\n          margins={margins}\n          svgDimensions={svgDimensions}\n        />\n        <Bars\n          className=\"Bars\"\n          scales={{ xScale, yScale }}\n          margins={margins}\n          data={data}\n          svgDimensions={svgDimensions}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default ResponsiveWrapper(Chart);\n","export const ALPHABET = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n","import { ALPHABET } from \"./alphabet\";\n\nexport const countLetterOcurences = string => {\n  const preparedData = {};\n\n  for (let character in ALPHABET) {\n    let char = ALPHABET[character];\n\n    const charReg = new RegExp(char, \"g\");\n    preparedData[char] = (string.match(charReg) || []).length;\n  }\n\n  return preparedData;\n};\n","import React, { useContext } from \"react\";\nimport Chart from \"./charts/bar-chart/Chart\";\nimport { countLetterOcurences } from \"../utils/countLetterOcurences\";\nimport getDataForChart from \"../utils/getDataForChart\";\nimport chartsContext from \"../_context/chartsContext\";\n\nconst DemoBarChart = props => {\n  const [state, dispatch] = useContext(chartsContext);\n\n  let dataUser1 = getDataForChart(countLetterOcurences(state.text.user1));\n  let dataUser2 = getDataForChart(countLetterOcurences(state.text.user2));\n\n  const data = [dataUser1, dataUser2];\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <Chart {...props} data={data} />\n    </div>\n  );\n};\n\nexport default DemoBarChart;\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { addTooltip, mouseleave, mousemove, mouseover } from \"../../Tooltip\";\n\nconst PieBody = ({ data, svgDimensions }) => {\n  const { height, width, margin } = svgDimensions;\n\n  useEffect(() => {\n    addTooltip(\"#pie-chart\", \"my-tooltip\");\n  }, []); // will run only once\n\n  useEffect(() => {\n    renderPieChart();\n  });\n\n  // old componentDidUpdate\n  const mounted = useRef();\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n    } else {\n      renderPieChart();\n    }\n  });\n\n  const renderPieChart = () => {\n    let radius = Math.min(width, height) / 2 - margin;\n    updatePieChart();\n\n    let color = d3\n      .scaleOrdinal()\n      .domain(data)\n      .range([\n        `url(#svgLinearGradient-user1)`,\n        `url(#svgLinearGradient-user2)`\n      ]);\n\n    let pie = d3.pie().value(function(d) {\n      return d.value;\n    });\n    let data_ready = pie(d3.entries(data));\n\n    d3.select(\"#chart-body\")\n      .selectAll(\"whatever\")\n      .data(data_ready)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"pie-path\")\n      .style(\"transition\", \"0.8s\")\n      .style(\"opacity\", \"0.8\")\n      .attr(\n        \"d\",\n        d3\n          .arc()\n          .innerRadius(100) // This is the size of the donut hole\n          .outerRadius(radius)\n      )\n      .attr(\"fill\", d => color(d.data.key))\n      .attr(\"stroke\", \"none\")\n\n      .attr(\"tooltipid\", \"#my-tooltip\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mousemove\", mousemove)\n      .on(\"mouseleave\", mouseleave);\n  };\n\n  const updatePieChart = () => {\n    d3.selectAll(\".pie-path\").remove();\n    d3.select(\"#chart-body\").attr(\n      \"transform\",\n      \"translate(\" + width / 2 + \",\" + height / 2 + \")\"\n    );\n  };\n  return <g id=\"chart-body\" />;\n};\n\nexport default PieBody;\n","import React from \"react\";\nimport ResponsiveWrapper from \"../../ResponsiveWrapper\";\nimport PieBody from \"./PieBody\";\n\nconst Chart = ({ parentWidth, data }) => {\n  const margin = 50;\n  const width = Math.max(parentWidth, 400);\n  const height = 500 - margin * 2;\n\n  const svgDimensions = {\n    margin,\n    width,\n    height\n  };\n\n  return (\n    <div id=\"pie-chart\">\n      <svg\n        id=\"my_piechart\"\n        width={svgDimensions.width}\n        height={svgDimensions.height}\n      >\n        <PieBody svgDimensions={svgDimensions} data={data} />\n      </svg>\n    </div>\n  );\n};\n\nexport default ResponsiveWrapper(Chart);\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Chart from \"./charts/pie-chart/Chart\";\nimport { countLetterOcurences } from \"../utils/countLetterOcurences\";\nimport getDataForChart from \"../utils/getDataForChart\";\nimport chartsContext from \"../_context/chartsContext\";\n\nconst ChartWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst DemoBarChart = props => {\n  const [state, dispatch] = useContext(chartsContext);\n\n  const formatUserData = userData => {\n    return userData.reduce(\n      (obj, item) => Object.assign(obj, { [item.letter]: item.count }),\n      {}\n    );\n  };\n\n  const sumObjectValues = obj => Object.values(obj).reduce((a, b) => a + b);\n\n  let dataUser1 = formatUserData(\n    getDataForChart(countLetterOcurences(state.text.user1))\n  );\n  let dataUser2 = formatUserData(\n    getDataForChart(countLetterOcurences(state.text.user2))\n  );\n\n  const data = {\n    user1: sumObjectValues(dataUser1),\n    user2: sumObjectValues(dataUser2)\n  };\n\n  return (\n    <ChartWrapper style={{ width: \"100%\", height: \"100%\" }}>\n      <Chart {...props} data={data} />\n    </ChartWrapper>\n  );\n};\n\nexport default DemoBarChart;\n","import * as d3 from \"d3\";\nimport { createSimulation } from \"./simulation\";\nimport { mouseleave, mousemove, mouseover } from \"../../Tooltip\";\n\nexport const renderBubble = (width, height, dataCompressed) => {\n  const radiusScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(dataCompressed, d => d.count)])\n    .range([0, d3.max(dataCompressed, d => d.count)]);\n\n  const svg = d3\n    .select(\"#bubble-chart\")\n    .append(\"svg\")\n    .attr(\"class\", \"bubble-chart\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n  const node = svg\n    .append(\"g\")\n    .selectAll(\"circle\")\n    .data(dataCompressed)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"circle\")\n    .append(\"circle\")\n    .attr(\"r\", d => (d.count === 0 ? d.count : radiusScale(d.count * 2 + 10)))\n    .style(\"fill\", \"rgb(84, 94, 163)\")\n    .style(\"fill-opacity\", 0.3)\n    .style(\"stroke-width\", 2)\n    .attr(\"tooltipid\", \"#my-bubble-tooltip\")\n    .on(\"mouseover\", mouseover)\n    .on(\"mousemove\", mousemove)\n    .on(\"mouseleave\", mouseleave)\n    .attr(\"stroke\", \"rgba(221, 216, 216, 0.5)\");\n\n  //add text only when the count of letter is greater than 0\n  const text = d3\n    .selectAll(\".circle\")\n    .filter(d => d.count !== 0)\n    .append(\"text\")\n    .style(\"fill\", \"white\");\n\n  createSimulation(width, height, radiusScale)\n    .nodes(dataCompressed)\n    .on(\"tick\", d => {\n      node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n\n      text\n        .attr(\"dx\", d => d.x - 5)\n        .attr(\"dy\", d => d.y + 5)\n        .text(d => d.letter);\n    });\n};\n","import * as d3 from \"d3\";\n\nexport const createSimulation = (width, height, radiusScale) => {\n  return d3\n    .forceSimulation()\n    .force(\n      \"center\",\n      d3\n        .forceCenter()\n        .x(width / 2)\n        .y(height / 2)\n    ) // Attraction to the center of the svg area\n    .force(\"charge\", d3.forceManyBody().strength(2))\n    .force(\n      \"forceX\",\n      d3\n        .forceX()\n        .strength(0.1)\n        .x(width * 0.5)\n    )\n    .force(\n      \"forceY\",\n      d3\n        .forceY()\n        .strength(0.1)\n        .y(height * 0.5)\n    )\n    .force(\n      \"collide\",\n      d3.forceCollide().radius(d => radiusScale(d.count * 2 + 15))\n    );\n};\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as d3 from \"d3\";\nimport ResponsiveWrapper from \"../../ResponsiveWrapper\";\nimport {\n  getMergedData,\n  getMergedDataCompressed\n} from \"../../../utils/getDataForChart\";\nimport { renderBubble } from \"./BubbleBody\";\nimport { addTooltip } from \"../../Tooltip\";\n\nconst CenteredWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst Chart = ({ parentWidth, data }) => {\n  const margin = 50;\n  const width = Math.max(parentWidth, 600);\n  const height = 400 - margin * 2;\n\n  const dataCompressed = getMergedDataCompressed(getMergedData(data));\n\n  useEffect(() => {\n    renderBubble(width, height, dataCompressed);\n    addTooltip(\"#bubble-chart\", \"my-bubble-tooltip\");\n  }, []); // will run only once\n\n  useEffect(() => {\n    d3.selectAll(\".bubble-chart\").remove();\n    renderBubble(width, height, dataCompressed);\n  });\n\n  return <CenteredWrapper id=\"bubble-chart\" />;\n};\n\nexport default ResponsiveWrapper(Chart);\n","import React, { useContext } from \"react\";\nimport Chart from \"./charts/bubble-chart/Chart\";\nimport { countLetterOcurences } from \"../utils/countLetterOcurences\";\nimport getDataForChart from \"../utils/getDataForChart\";\nimport chartsContext from \"../_context/chartsContext\";\n\nconst DemoBubbleChart = props => {\n  const [state, dispatch] = useContext(chartsContext);\n\n  let dataUser1 = getDataForChart(countLetterOcurences(state.text.user1));\n  let dataUser2 = getDataForChart(countLetterOcurences(state.text.user2));\n\n  const data = [dataUser1, dataUser2];\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <Chart {...props} data={data} />\n    </div>\n  );\n};\n\nexport default DemoBubbleChart;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport chartsContext from \"../_context/chartsContext\";\n\nconst TextAreaWrapper = styled.div`\n  padding: 15px;\n  min-height: 100px;\n  textarea {\n    width: 100%;\n    background: #252c47;\n    border: 1px solid rgba(54, 61, 81, 0.7);\n    color: white;\n    min-height: 100px;\n    outline: none;\n    resize: none;\n    padding-left: 15px;\n    box-sizing: border-box;\n    border-left: 5px solid;\n    font-size: 16px;\n    line-height: 24px;\n    border-left-color: ${p => p.usercolor};\n  }\n`;\n\nconst UserName = styled.div`\n  margin-bottom: 10px;\n  color: ${p => p.textColor};\n  text-transform: capitalize;\n`;\n\nconst TextArea = ({ type }) => {\n  const [state, dispatch] = useContext(chartsContext);\n\n  const setType = type == \"user1\" ? \"SET_USER1_TEXT\" : \"SET_USER2_TEXT\";\n  const onTextInputChange = e => {\n    dispatch({\n      type: setType,\n      text: e.target.value\n    });\n  };\n\n  const userColors = {\n    user2: \"#785ad0\",\n    user1: \"#f7c337\"\n  };\n\n  return (\n    <TextAreaWrapper usercolor={userColors[type]}>\n      <UserName textColor={userColors[type]}>{type}</UserName>\n      <textarea\n        onChange={onTextInputChange}\n        placeholder=\"Tekst\"\n        value={state.text[type] || \"\"}\n        spellCheck=\"false\"\n      />\n    </TextAreaWrapper>\n  );\n};\n\nexport default TextArea;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DemoBarChart from \"./DemoBarChart\";\nimport DemoPieChart from \"./DemoPieChart\";\nimport DemoBubbleChart from \"./DemoBubbleChart\";\nimport TextArea from \"./TextArea\";\n\nconst DashboardWrapper = styled.div`\n  height: 100%;\n  width: 100vw;\n  background: #1a203a;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Section = styled.div`\n  display: flex;\n  padding: 30px;\n  box-sizing: border-box;\n  :nth-child(2) {\n    margin-top: -30px;\n  }\n`;\n\nconst ItemWrapper = styled.div`\n  width: ${p => p.width}\n  min-width:  ${p => p.min};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: #252c47;\n  &:first-child {\n    margin-right: 20px;\n  }\n`;\n\nconst Dashboard = () => {\n  return (\n    <DashboardWrapper>\n      <Section>\n        <ItemWrapper width=\"70%\" min=\"600px\">\n          <DemoBarChart />\n        </ItemWrapper>\n        <ItemWrapper width=\"30%\" min=\"400px\">\n          <DemoPieChart />\n        </ItemWrapper>\n      </Section>\n      <Section>\n        <ItemWrapper width=\"70%\" min=\"600px\">\n          <DemoBubbleChart />\n        </ItemWrapper>\n        <ItemWrapper width=\"30%\" min=\"400px\">\n          <TextArea type=\"user1\" />\n          <TextArea type=\"user2\" />\n        </ItemWrapper>\n      </Section>\n    </DashboardWrapper>\n  );\n};\n\nexport default Dashboard;\n","import React, { useReducer } from \"react\";\nimport styled from \"styled-components\";\nimport { ThemeProvider } from \"styled-components\";\nimport defaultTheme from \"../theme\";\nimport { ChartsProvider } from \"../_context/chartsContext\";\nimport { chartsReducer, initialChartsState } from \"../_reducers/charts\";\nimport Dashboard from \"../components/Dashboard\";\n\nconst AppWrapper = styled.div`\n  height: 100vh;\n  overflow: hidden;\n`;\n\nconst App = () => {\n  const useChartsState = useReducer(chartsReducer, initialChartsState);\n\n  return (\n    <AppWrapper className=\"App\">\n      <ChartsProvider value={useChartsState}>\n        <ThemeProvider theme={defaultTheme}>\n          <Dashboard />\n        </ThemeProvider>\n      </ChartsProvider>\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}